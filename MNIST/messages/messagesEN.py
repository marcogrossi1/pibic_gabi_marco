CREATING = "Creating the model...\n"
CREATED = "Model created!\n"
LONG_TRAINING = "Starting the training. Take a seat, it will take some time! (estimated time: 15 - 60 minutes)\n"
SHORT_TRAINING = "Training... (estimated time: 45 - 90 seconds)\n"
DONE = "Done!\n"
TRAINING_SCORE = "Training set score: "
TESTING_SCORE = "Testing set score: "
DIGITS_PLOT = "Here are some examples of digits the machine predicted!\n"
CLOSE_IMG = "Close the image to proceed.\n"
CONFUSION_PLOT = "Here is a Confusion Plot!\n"
LINE = "---------------------------------------"
FINAL_RESULTS = "These are the final results for all the tests: "
INSTALLING_DEPENDENCIES = "Installing the necessary dependencies! This procces may take a few seconds.\n"
INITIALIZING = "Done! Initializing the application..."
GREETING = "Hello! Let's solve the MNIST problem using ML techniques!!!"
CHOOSE_METHOD = "Choose your method: "
CHOOSE_PARAMETERS = "Do you wanna test the parameters?"
INVALID_VALUE = "Invalid Value. Re-run the appication."
ENDING = "Ending the application! Hope you had fun!!! =)"
YES_PARAM_SEARCH = "Yes, I want to find the best parameter among the ones available (estimated 30 - 60 minutes)."
NO_PARAM_SEARCH = "No, I prefer to run with crazy parameters!!! (estimated 45 - 90 seg)"
CHOOSE_ACTIVATION_FUNCTION = "Activation Function ('identity', 'logistic', 'tanh', 'relu') -> relu:"
CHOOSE_SOLVER = "Solver ('lbfgs', 'sgd', 'adam'): -> sgd"
CHOOSE_LAYERS = "Hidden Layer(s) (Insert the numbers separated by spaces) -> 100 50:"

def ACTIVE_TESTING(j, solver, hiddenLayer, activation):
    return f"Test {j} - Solver: {solver}, Hidden Layers: {hiddenLayer}, Activation: {activation}\n"